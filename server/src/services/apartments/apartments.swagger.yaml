tags:
  - name: Apartments
    description: Operations related to apartments
paths:
  /apartments:
    get:
      tags:
        - Apartments
      summary: Get all apartments
      parameters:
        - name: searchTerm
          in: query
          required: false
          schema:
            type: string
          description: Search term (case-insensitive contains)
        - name: city
          in: query
          required: false
          schema:
            type: string
          description: Filter by city (case-insensitive contains)
        - name: numberOfBedrooms
          in: query
          required: false
          schema:
            type: integer
          description: Filter by exact number of bedrooms
        - name: squareFootage
          in: query
          required: false
          schema:
            type: integer
          description: Filter by exact square footage
        - name: isAvailable
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by availability status
        - name: minPrice
          in: query
          required: false
          schema:
            type: number
            format: float
          description: Filter by minimum price
        - name: maxPrice
          in: query
          required: false
          schema:
            type: number
            format: float
          description: Filter by maximum price
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            enum:
              - price
              - numberOfBedrooms
              - squareFootage
          description: Field to sort by
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          description: Sort order (ascending or descending)
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Page number for pagination
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Apartment"
    post:
      tags:
        - Apartments
      summary: Add a new apartment
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Cozy 2-bedroom loft"
                description:
                  type: string
                  example: "A bright loft in downtown Cairo with river views."
                address:
                  type: string
                  example: "123 Main St"
                city:
                  type: string
                  example: "Cairo"
                state:
                  type: string
                  example: "Cairo Governorate"
                zipCode:
                  type: string
                  example: "11511"
                country:
                  type: string
                  example: "Egypt"
                lat:
                  type: number
                  format: float
                  example: 30.0444
                lng:
                  type: number
                  format: float
                  example: 31.2357
                price:
                  type: number
                  format: float
                  example: 1500.00
                currency:
                  type: string
                  example: "EGP"
                numberOfBedrooms:
                  type: integer
                  example: 2
                numberOfBathrooms:
                  type: integer
                  example: 1
                image:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Array of image files to upload
                squareFootage:
                  type: integer
                  example: 850
                isAvailable:
                  type: boolean
                  example: true
                buildYear:
                  type: integer
                  example: 2018
                contactEmail:
                  type: string
                  format: email
                  example: "owner@example.com"
                contactPhone:
                  type: string
                  example: "+201012345678"
              required:
                - title
                - address
                - city
                - price
                - currency
                - numberOfBedrooms
                - numberOfBathrooms
                - contactEmail
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    $ref: "#/components/schemas/Apartment"
  /apartments/{apartmentId}:
    get:
      tags:
        - Apartments
      summary: Get an apartment by id
      parameters:
        - name: apartmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    $ref: "#/components/schemas/Apartment"

    delete:
      tags:
        - Apartments
      summary: Delete an apartment by id
      parameters:
        - name: apartmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
    put:
      tags:
        - Apartments
      summary: Update an apartment by id
      parameters:
        - name: apartmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApartmentInput"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    $ref: "#/components/schemas/Apartment"
components:
  schemas:
    Apartment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        title:
          type: string
          example: "Cozy 2-bedroom loft"
        description:
          type: string
          example: "A bright loft in downtown Cairo with river views."
        address:
          type: string
          example: "123 Main St"
        city:
          type: string
          example: "Cairo"
        state:
          type: string
          example: "Cairo Governorate"
        zipCode:
          type: string
          example: "11511"
        country:
          type: string
          example: "Egypt"
        lat:
          type: number
          format: float
          example: 30.0444
        lng:
          type: number
          format: float
          example: 31.2357
        price:
          type: number
          format: float
          example: 1500.00
        currency:
          type: string
          example: "EGP"
        numberOfBedrooms:
          type: integer
          example: 2
        numberOfBathrooms:
          type: integer
          example: 1
        imageUrls:
          type: array
          items:
            type: string
            format: uri
          example:
            - "https://example.com/img1.jpg"
            - "https://example.com/img2.jpg"
        squareFootage:
          type: integer
          example: 850
        isAvailable:
          type: boolean
          example: true
        buildYear:
          type: integer
          example: 2018
        contactEmail:
          type: string
          format: email
          example: "owner@example.com"
        contactPhone:
          type: string
          example: "+201012345678"
      required:
        - title
        - address
        - city
        - price
        - currency
        - numberOfBedrooms
        - numberOfBathrooms
        - contactEmail

    ApartmentInput:
      type: object
      properties:
        title:
          type: string
          example: "Cozy 2-bedroom loft"
        description:
          type: string
          example: "A bright loft in downtown Cairo with river views."
        address:
          type: string
          example: "123 Main St"
        city:
          type: string
          example: "Cairo"
        state:
          type: string
          example: "Cairo Governorate"
        zipCode:
          type: string
          example: "11511"
        country:
          type: string
          example: "Egypt"
        lat:
          type: number
          format: float
          example: 30.0444
        lng:
          type: number
          format: float
          example: 31.2357
        price:
          type: number
          format: float
          example: 1500.00
        currency:
          type: string
          example: "EGP"
        numberOfBedrooms:
          type: integer
          example: 2
        numberOfBathrooms:
          type: integer
          example: 1
        imageUrls:
          type: array
          items:
            type: string
            format: uri
          example:
            - "https://example.com/img1.jpg"
        squareFootage:
          type: integer
          example: 850
        isAvailable:
          type: boolean
          example: true
        buildYear:
          type: integer
          example: 2018
        contactEmail:
          type: string
          format: email
          example: "owner@example.com"
        contactPhone:
          type: string
          example: "+201012345678"
      required:
        - title
        - address
        - city
        - price
        - currency
        - numberOfBedrooms
        - numberOfBathrooms
        - contactEmail
